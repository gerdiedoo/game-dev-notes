{
	"nodes":[
		{"type":"group","id":"6cbcae85f8370c9d","x":-40,"y":-1040,"width":1320,"height":1280,"label":"Inheritance"},
		{"type":"group","id":"0a91c4c7754e3c28","x":-1160,"y":-1620,"width":480,"height":418,"label":"Object-Oriented Paradigm"},
		{"type":"group","id":"697ce90362c64c14","x":-40,"y":-1880,"width":720,"height":260,"label":"Encapsulation"},
		{"type":"group","id":"bffa9a3e780865c4","x":-40,"y":-1480,"width":507,"height":320,"label":"Abstraction"},
		{"type":"text","text":"1. **Encapsulation**: This principle involves bundling data (attributes or properties) and the methods (functions or procedures) that operate on the data into a single unit called a class. Encapsulation restricts direct access to the internal details of an object and provides a well-defined interface for interacting with it. This enhances data security, modularity, and maintainability of the codebase.\n","id":"3b2c21cfa96ca3a1","x":-1920,"y":-1645,"width":620,"height":190},
		{"type":"text","text":"\n2. **Abstraction**: Abstraction refers to the process of simplifying complex reality by modeling classes based on their essential characteristics. It involves creating abstract classes that define a common set of properties and behaviors that are shared among various objects. Abstraction allows developers to focus on the high-level functionality of an object, ignoring the low-level implementation details. It promotes reusability and flexibility in the codebase.\n","id":"5900fe807534c452","x":-1920,"y":-1420,"width":620,"height":240},
		{"type":"text","text":"3. **Inheritance**: Inheritance allows a class (subclass or derived class) to inherit properties and behaviors from another class (superclass or base class). This promotes code reuse and the creation of a hierarchy of classes. Subclasses can extend or modify the behavior of their superclass while inheriting its characteristics. Inheritance enables a more organized and efficient way of creating and maintaining code, as common features can be defined in a single superclass.","id":"8f3dc2f5b1b33096","x":-1920,"y":-1140,"width":620,"height":241},
		{"type":"text","text":"4. **Polymorphism**: Polymorphism allows objects of different classes to be treated as objects of a common superclass. It enables the use of a single interface to represent different types of objects. Polymorphism is often achieved through method overriding and method overloading. Method overriding involves redefining a method in a subclass to provide a specific implementation, while method overloading involves defining multiple methods with the same name but different parameters. Polymorphism enhances code flexibility and extensibility by allowing objects to be interchanged without affecting the program's behavior.\n","id":"5caf4912e7fae44a","x":-1920,"y":-860,"width":620,"height":280},
		{"type":"text","text":"Encapsulation","id":"dc9dfb4262bb5743","x":-1049,"y":-1580,"width":250,"height":60},
		{"type":"text","text":"Abstraction","id":"c766cc25f91ea221","x":-1049,"y":-1493,"width":250,"height":60},
		{"type":"text","text":"Inheritance","id":"c7f42d350e29da9e","x":-1049,"y":-1400,"width":250,"height":60},
		{"type":"text","text":"Polymorphism","id":"c69fc2fc3722e31b","x":-1049,"y":-1300,"width":250,"height":60},
		{"type":"text","text":"Public","id":"88ff35f2038dd1e6","x":-2,"y":-1829,"width":145,"height":50},
		{"type":"text","text":"Public = Accessible outside of class","id":"2aaf9962c24f01c4","x":213,"y":-1829,"width":427,"height":50},
		{"type":"text","text":"Protected","id":"9c3f0f62a840edf4","x":-2,"y":-1779,"width":145,"height":50},
		{"type":"text","text":"Protected = Accessible to the class and derived class","id":"5a61262f6853de88","x":213,"y":-1779,"width":427,"height":50},
		{"type":"text","text":"Private","id":"029d46276a822b62","x":-2,"y":-1729,"width":145,"height":50},
		{"type":"text","text":"Private = Not accessible outside of class","id":"623f138cdf11abe5","x":213,"y":-1729,"width":427,"height":50},
		{"type":"text","text":"\tclass Vehicle {\n\t\tprivate:\n\t\t\tint name;\n\t\tpublic:\n\t\t\tvoid set_name(int parameter){\n\t\t\t\tname = parameter;\n\t\t\t}\n\t\t\tint get_name(){\n\t\t\t\treturn name;\n\t\t\t}\n\t};","id":"3d2f89e397c1f226","x":147,"y":-989,"width":658,"height":373},
		{"type":"text","text":"Keeping important properties as private and using public functions to modify the variables\n","id":"ed3bc5af0b91ac27","x":-520,"y":-1629,"width":250,"height":159},
		{"type":"text","text":"\tclass Car : public Vehicle {\n\t\tprivate: \n\t\t\tint speed;\n\t\tpublic:\n\t\t\tvoid set_speed(int parameter){\n\t\t\t\tspeed = parameter;\n\t\t\t}\n\t\t\tint get_speed(){\n\t\t\t\treturn speed;\n\t\t\t}\n\t};","id":"16db7801b6cc640e","x":147,"y":-584,"width":658,"height":364},
		{"type":"text","text":"\tclass Scooter : public Vehicle {\n\t\tprivate: \n\t\t\tint gear;\n\t\tpublic:\n\t\t\tvoid set_gear(int parameter){\n\t\t\t\tgear = parameter;\n\t\t\t}\n\t\t\tint get_gear(){\n\t\t\t\treturn speed;\n\t\t\t}\n\t};","id":"a5af02c0e7bebdac","x":147,"y":-192,"width":658,"height":364},
		{"type":"text","text":"Parent Object","id":"1db717b7b205dd20","x":960,"y":-834,"width":250,"height":64},
		{"type":"text","text":"Child that is inherited from Parent","id":"8d786f4dae1eb717","x":960,"y":-434,"width":250,"height":64},
		{"type":"text","text":"Simplifying complex reality by modeling classes based on their essential characteristics","id":"0fbe115be4f56f2a","x":-520,"y":-1441,"width":250,"height":143},
		{"type":"text","text":"Allows sub class or derived class to inherit properties and methods","id":"fb20f698a8e2bf8a","x":-520,"y":-1264,"width":250,"height":124},
		{"type":"text","text":"achieved through method overriding or overloading","id":"857fae6d84881ad4","x":-520,"y":-1100,"width":250,"height":60},
		{"type":"text","text":"SCOOTER","id":"f1158d33842938ca","x":282,"y":-1358,"width":129,"height":60},
		{"type":"text","text":"BIKE","id":"dc8218592717dd10","x":282,"y":-1280,"width":129,"height":60},
		{"type":"text","text":"VEHICLE","id":"86ebb0234732818c","x":6,"y":-1358,"width":130,"height":60},
		{"type":"text","text":"CAR","id":"005ed73707d8ab07","x":281,"y":-1441,"width":130,"height":60}
	],
	"edges":[
		{"id":"4eb5ca987997ff82","fromNode":"029d46276a822b62","fromSide":"right","toNode":"623f138cdf11abe5","toSide":"left"},
		{"id":"a2c155f33a8c8dac","fromNode":"9c3f0f62a840edf4","fromSide":"right","toNode":"5a61262f6853de88","toSide":"left"},
		{"id":"d6b53999f8078c86","fromNode":"88ff35f2038dd1e6","fromSide":"right","toNode":"2aaf9962c24f01c4","toSide":"left"},
		{"id":"725dfd1aedacdb4a","fromNode":"dc9dfb4262bb5743","fromSide":"right","toNode":"ed3bc5af0b91ac27","toSide":"left"},
		{"id":"116e3511b7dcd1b0","fromNode":"ed3bc5af0b91ac27","fromSide":"right","toNode":"697ce90362c64c14","toSide":"left"},
		{"id":"3fc96c9fef16cb78","fromNode":"c766cc25f91ea221","fromSide":"right","toNode":"0fbe115be4f56f2a","toSide":"left"},
		{"id":"8d9705e4ac639abe","fromNode":"c7f42d350e29da9e","fromSide":"right","toNode":"fb20f698a8e2bf8a","toSide":"left"},
		{"id":"1ec9c96c0bc624cf","fromNode":"c69fc2fc3722e31b","fromSide":"right","toNode":"857fae6d84881ad4","toSide":"left"},
		{"id":"b963b078e63f0190","fromNode":"fb20f698a8e2bf8a","fromSide":"right","toNode":"6cbcae85f8370c9d","toSide":"left"},
		{"id":"0530bde7f9013ca3","fromNode":"3d2f89e397c1f226","fromSide":"right","toNode":"1db717b7b205dd20","toSide":"left"},
		{"id":"bda51124881cab2c","fromNode":"16db7801b6cc640e","fromSide":"right","toNode":"8d786f4dae1eb717","toSide":"left"},
		{"id":"a908381267be7775","fromNode":"dc9dfb4262bb5743","fromSide":"left","toNode":"3b2c21cfa96ca3a1","toSide":"right"},
		{"id":"7fd288573bac79b7","fromNode":"c766cc25f91ea221","fromSide":"left","toNode":"5900fe807534c452","toSide":"right"},
		{"id":"dd4e851848950bc5","fromNode":"c7f42d350e29da9e","fromSide":"left","toNode":"8f3dc2f5b1b33096","toSide":"right"},
		{"id":"2c6c43aaf0e74661","fromNode":"c69fc2fc3722e31b","fromSide":"left","toNode":"5caf4912e7fae44a","toSide":"right"},
		{"id":"51d0e40cc6ca8951","fromNode":"86ebb0234732818c","fromSide":"right","toNode":"005ed73707d8ab07","toSide":"left"},
		{"id":"8831675eb4fc5f8a","fromNode":"86ebb0234732818c","fromSide":"right","toNode":"dc8218592717dd10","toSide":"left"},
		{"id":"3b08548132f974a4","fromNode":"86ebb0234732818c","fromSide":"right","toNode":"f1158d33842938ca","toSide":"left"},
		{"id":"ab985310b8b470d5","fromNode":"0fbe115be4f56f2a","fromSide":"right","toNode":"bffa9a3e780865c4","toSide":"left"},
		{"id":"9b8958445b9ef57e","fromNode":"a5af02c0e7bebdac","fromSide":"right","toNode":"8d786f4dae1eb717","toSide":"left"},
		{"id":"104c31065a764013","fromNode":"3d2f89e397c1f226","fromSide":"left","toNode":"a5af02c0e7bebdac","toSide":"left"},
		{"id":"c7f023624a10d5ac","fromNode":"3d2f89e397c1f226","fromSide":"left","toNode":"16db7801b6cc640e","toSide":"left"}
	]
}